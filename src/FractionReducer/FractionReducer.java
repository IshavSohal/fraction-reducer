/********************************************************************************
*                                                                               *
* Author: Ishav Sohal                                                           *
* Class: ICS 4U                                                                 * 
* Date: January 10th, 2019                                                      *                     
* Program: Fraction Reducer                                                     *
* Description: This program will allow the user to enter a fraction into the    *
*              program, and the program will then simplify this fraction into   *
*              its simplest form                                                *  
********************************************************************************/
package FractionReducer;


public class FractionReducer extends javax.swing.JFrame {

    // Creates a new form called "FractionReducer"
    public FractionReducer() {
        initComponents();
        
        // Sets focus to the "txtNumer" text field
        txtNumer.requestFocusInWindow(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMain = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelNumer = new javax.swing.JLabel();
        labelDenom = new javax.swing.JLabel();
        labelResult = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNumer = new javax.swing.JTextField();
        txtDenom = new javax.swing.JTextField();
        btnReduce = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        labelError = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelMain.setFont(new java.awt.Font("Tahoma", 3, 54)); // NOI18N
        labelMain.setForeground(new java.awt.Color(0, 153, 255));
        labelMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMain.setText("Fraction Reducer");

        labelNumer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelNumer.setText("Enter the Numerator of the Fraction: ");

        labelDenom.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelDenom.setText("Enter the Denominator of the Fraction: ");

        labelResult.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 5)); // NOI18N
        jLabel2.setText("----------------------------------------------------'---------------------");

        txtNumer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNumer.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDenom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDenom.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnReduce.setBackground(new java.awt.Color(0, 204, 51));
        btnReduce.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReduce.setText("Reduce Fraction To Lowest Terms ");
        btnReduce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReduceActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 153, 0));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        labelError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelError.setForeground(new java.awt.Color(255, 0, 0));
        labelError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnExit.setBackground(new java.awt.Color(255, 0, 0));
        btnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelNumer)
                                .addGap(54, 54, 54)
                                .addComponent(txtNumer, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnReduce)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 49, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(labelError, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(labelDenom)
                        .addGap(50, 50, 50)
                        .addComponent(txtDenom, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNumer)
                    .addComponent(txtNumer, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDenom)
                    .addComponent(txtDenom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReduce, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(labelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(labelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(labelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /* Code Stub for "btnReduce" - Executed when the user clicks the "Reduce Fraction
    To Lowest Terms" button. This Code Stub will get the numerator and demoninator of 
    a fraction (entered by the user), find the Greatest Common Divisor between the two 
    numbers (Using the Euclidean Algorithm), divides the numerator and denominator by 
    the GCD, and then displays the new fraction, which is the old fraction in lowest 
    terms, onto the screen */
    private void btnReduceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReduceActionPerformed

        // If one of the number fields of the fraction does not have an entry
        if (txtNumer.getText().equals("") || txtDenom.getText().equals("")){
            
            // Tells the user to fill in all fields
            labelError.setText ("Please fill in both fields and try again");
        }
        
           
        // If both number fields are successfully filled in 
        else {
            
            // If the users denominator entry is 0
            if (txtDenom.getText().equals("0")){
                
                // Tell the user that this fraction is undefined
                labelError.setText("This fraction is undefined. Try again");
                
                // Clears the "laberError" text field 
                txtNumer.setText ("");
        
                // Clears the "txtDenom" text field 
                txtDenom.setText ("");
                
                // Clears the "labelResult" label  
                labelResult.setText ("");
                
                // Sets focus to the "txtNumer" text field
                txtNumer.requestFocusInWindow(); 
            }
            
            // If the users denominator entry is not 0
            else {
                
                /* Converts the users Numerator and Denominator inputs into Integers, and 
                stores them into variables */
                int numer_1 = Integer.parseInt(txtNumer.getText());
                int denom_1 = Integer.parseInt(txtDenom.getText());

                /* Calls the "gcd" function with the parameters being the users number inputs. This
                function will determine the Greatest Common Divisor of the two numbers entered
                by the user, and will store it within the "gcd" variable */ 
                int gcd = gcd (numer_1, denom_1); 

                /* Divide the users inputs by their Greatest Common Divisor, in order to reduce the 
                fraction to its simplest form */
                int numer_2 = numer_1 / gcd;
                int denom_2 = denom_1 / gcd;

                // If the users numerator entry is 0
                if (numer_1 == 0){
                    
                    // Display that the reduced fraction is simply 0, not a fraction
                    labelResult.setText(numer_1 + "/" + denom_1 + " in lowest terms is: 0");
                }
                
                // If the denominator is a factor of the numerator
                else if (numer_1 % denom_1 == 0){
                    
                    // Display that the reduced fraction is not a fraction, but a whole number 
                    labelResult.setText(numer_1 + "/" + denom_1 + " in lowest terms is: " + numer_1 / denom_1);
                }
                // If the users numerator entry is not 0, nor is the denominator a factor of the numerator
                else {
                    
                    // Displays the reduced fraction onto the screen
                    labelResult.setText(numer_1 + "/" + denom_1 + " in lowest terms is: " + numer_2 + "/" + denom_2);
                } 
                
                // Clears the "laberError" text field 
                labelError.setText ("");
            }
        }
        
    }//GEN-LAST:event_btnReduceActionPerformed

    // Code Stub for "btnClear" - Executed whent the user clicks the "Clear" button
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        
        // Clears the "txtNumer" text field 
        txtNumer.setText ("");
        
        // Clears the "txtDenom" text field 
        txtDenom.setText ("");

        // Clears the "laberError" label 
        labelError.setText ("");
        
        // Clears the "labelResult" label
        labelResult.setText ("");
        
        // Sets focus to the "txtNumer" text field
        txtNumer.requestFocusInWindow(); 
    }//GEN-LAST:event_btnClearActionPerformed

    // Code Stub for "btnExit" - Executed when the user clicks the "Exit" button
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed

        // Exits the program
        System.exit(0);
        
    }//GEN-LAST:event_btnExitActionPerformed

    
    /* Creates a method that takes in two integers, determines the Greatest Common Divisor of 
    these two integers, and returns the GCD to the point where the method was called. */ 
    public static int gcd (int num1, int num2){

        /* If "num2" is equal to 0. This is the Base Case. It determines when the remainder 
        of a specific division equation is 0, and concludes that the divisor of that division 
        equation is the Greatest Common Divisor of the two numbers entered by the user */
        if (num2 == 0){

            // Returns "num1", which contains the GCD
            return num1;
        }

        // If "num2" is not equal to 0
        else {

            /* This line will divide the numerator and denominator entered by the user, and get the 
            remainder. It will use this remainder as the divisor for the next division equation, and 
            the divisor of the previous division equation will be used as the dividend. It will then 
            call this function again with these new paramters. This will occur over and over again, until 
            the remainder of a specific divison equation is 0. The Base Case is used to determine when
            the remiander is 0, and it concludes that the divisor of that specific division equation is
            the GCD. This method of calculting GCD is based on Euclid's Algorithm.  */
            return gcd (num2, num1 % num2);
        }
    }   
    
    
    // MAIN METHOD
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FractionReducer().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnReduce;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelDenom;
    private javax.swing.JLabel labelError;
    private javax.swing.JLabel labelMain;
    private javax.swing.JLabel labelNumer;
    private javax.swing.JLabel labelResult;
    private javax.swing.JTextField txtDenom;
    private javax.swing.JTextField txtNumer;
    // End of variables declaration//GEN-END:variables

}

